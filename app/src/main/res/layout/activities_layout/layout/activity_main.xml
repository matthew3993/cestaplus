<?xml version="1.0" encoding="utf-8"?>
<!-- SOURCES: https://inthecheesefactory.com/blog/android-design-support-library-codelab/en
              https://github.com/nuuneoi/Lab-Android-DesignLibrary

    For some reason there must be 2 SwipeRefreshLayouts:
        - the one wrapping CoordinatorLayout (swipeRefreshLayoutMainActivity) is one which is really used
            - !! don't forget to add onOffsetChangedListener to enable swipe-to-refresh only when collapsing toolbar is fully expanded !!
            - https://gist.github.com/blackcj/001a90c7775765ad5212
            - http://stackoverflow.com/questions/30833589/scrolling-down-triggers-refresh-instead-of-revealing-the-toolbar
        - the one wrapping RecyclerView (swipeRecyclerViewMain) is disabled in code during initialisation of views

    When SwipeRefreshLayout wrapping RecyclerView is removed, CollapsingToolbarLayout is always collapsed, so header image is not shown.
    We don't want swipe-to-refresh only over recycler view, but over entire screen - also over header picture.
    -->
<android.support.v4.widget.DrawerLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"

    android:id="@+id/rootDrawerLayout"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".activities.MainActivity">

    <!-- this SwipeRefreshLayout is really used - take a look on comment at the top  -->
    <android.support.v4.widget.SwipeRefreshLayout
        android:id="@+id/swipeRefreshLayoutMainActivity"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:layout_behavior="@string/appbar_scrolling_view_behavior"
        >

        <!-- ACTIVITY LAYOUT START ********************************************************* -->
        <android.support.design.widget.CoordinatorLayout
        android:id="@+id/mainActivityCoordinatorLayout"
        android:layout_width="match_parent"
        android:layout_height="match_parent">

            <!-- APPBAR START ************************************************************* -->
            <android.support.design.widget.AppBarLayout
                android:id="@+id/mainActivityAppBarLayout"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:theme="@style/ThemeOverlay.AppCompat.Dark">

                <!-- scroll flags combination: scroll|enterAlways|enterAlwaysCollapsed
                     SOURCE: http://stackoverflow.com/questions/35186639/collapsingtoolbarlayout-and-hide-toolbar-while-scrolling
                     title is disabled here and set in Toolbar, because:
                        - title in Collapsing Toolbar Layout (here) is always expanding & collapsing
                        - title in Toolbar is normal title

                     For some reason, we must add app:statusBarScrim="@null" to CollapsingToolbarLayout, when used v4 fragments.
                     This solves crashing because of exception: "java.lang.NoSuchMethodError: No static method setLayoutDirection(Landroid/graphics/drawable/Drawable;I)V in class Landroid/support/v4/graphics/drawable/DrawableCompat; or its super classes (declaration of 'android.support.v4.graphics.drawable.DrawableCompat' appears in /data/data/sk.cestaplus.cestaplusapp/files/instant-run/dex/slice-com.android.support-support-v4-24.0.0_de8233fca3486557f0b1fc54e6082f58ad72ba11-classes.dex)"
                     SOURCE: http://stackoverflow.com/a/40453348
                -->
                <android.support.design.widget.CollapsingToolbarLayout
                    android:id="@+id/mainActivityCollapsingToolbarLayout"
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    app:contentScrim="?attr/colorPrimary"
                    app:titleEnabled="false"
                    app:layout_scrollFlags="scroll|enterAlways|enterAlwaysCollapsed"

                    app:statusBarScrim="@null">

                    <RelativeLayout
                        android:id="@+id/collapsingToolbarRelativeLayoutMainActivity"
                        xmlns:android="http://schemas.android.com/apk/res/android"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:weightSum="1"
                        android:background="@drawable/custom_bg"
                        android:clickable="true"
                        android:visibility="gone"

                        app:layout_collapseMode="parallax"
                        app:layout_collapseParallaxMultiplier="@dimen/baterka_title_image_collapseParallaxMultiplier"
                        >

                        <com.android.volley.toolbox.NetworkImageView
                            android:id="@+id/nivMainActivityHeaderImage"

                            android:layout_width="match_parent"
                            android:layout_height="@dimen/header_image_height"

                            android:scaleType="centerCrop"

                            android:layout_alignParentTop="true"
                            />

                        <!-- View making gradient over image from TOP
                             It must be written below image in layout code text to be visible!!
                        -->
                        <View
                            android:layout_width="match_parent"
                            android:layout_height="@dimen/header_image_gradient_from_top"

                            android:background="@drawable/image_gradient_top"

                            android:layout_alignTop="@+id/nivMainActivityHeaderImage"
                            />

                        <!--  View making gradient over image from BOTTOM
                            - position, width and height are same as nivMainActivityHeaderImage
                            - background is set to gradient xml file
                         Gradient is now made:
                            - it's linear from black (with reduces alpha) to transparent
                            - it's aligned to bottom of header image
                            - it's height is half from image height in portrait and less then half in land orientation
                         SOURCE: http://stackoverflow.com/questions/23991395/add-gradient-to-imageview
                        -->
                        <View
                            android:layout_width="match_parent"
                            android:layout_height="@dimen/header_image_gradient_from_bottom"

                            android:background="@drawable/image_gradient_bottom"

                            android:layout_alignBottom="@+id/nivMainActivityHeaderImage"
                            />

                        <!-- SOURCE: http://stackoverflow.com/questions/19974078/android-transparent-text -->
                        <it.gilvegliach.android.transparenttexttextview.TransparentTextTextView
                            android:id="@+id/tvHeaderAuthor"
                            style="@style/header_Author"

                            android:layout_width="wrap_content"
                            android:layout_height="wrap_content"

                            android:layout_above="@+id/tvHeaderTitle"
                            android:layout_alignLeft="@+id/nivMainActivityHeaderImage"
                            />

                        <TextView
                            android:id="@+id/tvHeaderTitle"
                            style="@style/header_Title"

                            android:layout_width="match_parent"
                            android:layout_height="wrap_content"

                            android:layout_above="@+id/tvHeaderDescription"
                            android:layout_alignLeft="@+id/nivMainActivityHeaderImage"

                            android:minLines="1"
                            />

                        <!-- HERE can be TextView with source of photo -->

                        <TextView
                            android:id="@+id/tvHeaderDescription"
                            style="@style/header_short_text"

                            android:layout_width="match_parent"
                            android:layout_height="wrap_content"

                            android:layout_alignBottom="@+id/nivMainActivityHeaderImage"
                            android:layout_alignLeft="@+id/nivMainActivityHeaderImage"

                            android:minLines="1"
                            />

                        <View
                            style="@style/header_divider"
                            android:layout_below="@id/tvHeaderDescription"/>

                    </RelativeLayout>

                    <!-- title is disabled in CollapsingToolbarLayout and set here -->
                    <android.support.v7.widget.Toolbar
                        android:id="@+id/mainActivityToolbar"
                        android:layout_width="match_parent"
                        android:layout_height="?attr/actionBarSize"

                        app:title="@string/app_name"
                        app:layout_collapseMode="pin"
                        app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
                        app:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar" />

                </android.support.design.widget.CollapsingToolbarLayout>

            </android.support.design.widget.AppBarLayout>
            <!-- APPBAR END *************************************************************** -->

            <!-- ACTIVITY BODY START ******************************************************* -->

            <!-- this SwipeRefreshLayout is disabled in code - take a look on comment at the top -->
            <android.support.v4.widget.SwipeRefreshLayout
                android:id="@+id/swipeRecyclerViewMain"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                app:layout_behavior="@string/appbar_scrolling_view_behavior">

                    <!-- FRAGMENT CONTAINER
                         for AllFragment or SectionFragment
                     -->
                    <LinearLayout
                    android:id="@+id/mainActivityMainFragmentContainer"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="vertical"
                    />

            </android.support.v4.widget.SwipeRefreshLayout>
            <!-- ACTIVITY BODY END ********************************************************* -->

        </android.support.design.widget.CoordinatorLayout>
        <!-- ACTIVITY LAYOUT END ******************************************** -->

    </android.support.v4.widget.SwipeRefreshLayout>

    <!-- LAYOUT OF DRAWER START ***************************************** -->
    <!-- app:headerLayout="@layout/nav_header"

    app:headerLayout="@layout/navigational_header" - DO NOT worked as expected
    app:menu="@layout/nav_drawer_layout"
    -->
    <android.support.design.widget.NavigationView
        android:id="@+id/mainActivityNavigationView"

        android:layout_width="wrap_content"
        android:layout_height="match_parent"

        android:layout_gravity="start"

        app:itemIconTint="#333"
        app:itemTextColor="#333"
        >

        <!--
        <include layout="@layout/navigational_header"/>
        -->
        <include layout="@layout/nav_drawer_layout"/>

    </android.support.design.widget.NavigationView>
    <!-- LAYOUT OF DRAWER END ******************************************* -->

</android.support.v4.widget.DrawerLayout>